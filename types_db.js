export const Json = ["string", "number", "boolean", "null", { key: "string | undefined" }, "Json[]"];

export const Database = {
  public: {
    Tables: {
      customers: {
        Row: {
          id: "string",
          stripe_customer_id: "string | null",
        },
        Insert: {
          id: "string",
          stripe_customer_id: "string | null",
        },
        Update: {
          id: "string | undefined",
          stripe_customer_id: "string | null | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "customers_id_fkey",
            columns: ["id"],
            referencedRelation: "users",
            referencedColumns: ["id"],
          },
        ],
      },
      liked_songs: {
        Row: {
          created_at: "string",
          song_id: "number",
          user_id: "string",
        },
        Insert: {
          created_at: "string | undefined",
          song_id: "number",
          user_id: "string",
        },
        Update: {
          created_at: "string | undefined",
          song_id: "number | undefined",
          user_id: "string | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "liked_songs_song_id_fkey",
            columns: ["song_id"],
            referencedRelation: "songs",
            referencedColumns: ["id"],
          },
          {
            foreignKeyName: "liked_songs_user_id_fkey",
            columns: ["user_id"],
            referencedRelation: "users",
            referencedColumns: ["id"],
          },
        ],
      },
      prices: {
        Row: {
          active: "boolean | null",
          currency: "string | null",
          description: "string | null",
          id: "string",
          interval: "public.Enums.pricing_plan_interval | null",
          interval_count: "number | null",
          metadata: "Json | null",
          product_id: "string | null",
          trial_period_days: "number | null",
          type: "public.Enums.pricing_type | null",
          unit_amount: "number | null",
        },
        Insert: {
          active: "boolean | null | undefined",
          currency: "string | null | undefined",
          description: "string | null | undefined",
          id: "string",
          interval: "public.Enums.pricing_plan_interval | null | undefined",
          interval_count: "number | null | undefined",
          metadata: "Json | null | undefined",
          product_id: "string | null | undefined",
          trial_period_days: "number | null | undefined",
          type: "public.Enums.pricing_type | null | undefined",
          unit_amount: "number | null | undefined",
        },
        Update: {
          active: "boolean | null | undefined",
          currency: "string | null | undefined",
          description: "string | null | undefined",
          id: "string | undefined",
          interval: "public.Enums.pricing_plan_interval | null | undefined",
          interval_count: "number | null | undefined",
          metadata: "Json | null | undefined",
          product_id: "string | null | undefined",
          trial_period_days: "number | null | undefined",
          type: "public.Enums.pricing_type | null | undefined",
          unit_amount: "number | null | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "prices_product_id_fkey",
            columns: ["product_id"],
            referencedRelation: "products",
            referencedColumns: ["id"],
          },
        ],
      },
      products: {
        Row: {
          active: "boolean | null",
          description: "string | null",
          id: "string",
          image: "string | null",
          metadata: "Json | null",
          name: "string | null",
        },
        Insert: {
          active: "boolean | null | undefined",
          description: "string | null | undefined",
          id: "string",
          image: "string | null | undefined",
          metadata: "Json | null | undefined",
          name: "string | null | undefined",
        },
        Update: {
          active: "boolean | null | undefined",
          description: "string | null | undefined",
          id: "string | undefined",
          image: "string | null | undefined",
          metadata: "Json | null | undefined",
          name: "string | null | undefined",
        },
        Relationships: [],
      },
      songs: {
        Row: {
          author: "string | null",
          created_at: "string",
          id: "number",
          image_path: "string | null",
          songs_path: "string | null",
          title: "string | null",
          user_id: "string | null",
        },
        Insert: {
          author: "string | null | undefined",
          created_at: "string | undefined",
          id: "number | undefined",
          image_path: "string | null | undefined",
          songs_path: "string | null | undefined",
          title: "string | null | undefined",
          user_id: "string | null | undefined",
        },
        Update: {
          author: "string | null | undefined",
          created_at: "string | undefined",
          id: "number | undefined",
          image_path: "string | null | undefined",
          songs_path: "string | null | undefined",
          title: "string | null | undefined",
          user_id: "string | null | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "songs_user_id_fkey",
            columns: ["user_id"],
            referencedRelation: "users",
            referencedColumns: ["id"],
          },
        ],
      },
      subscriptions: {
        Row: {
          cancel_at: "string | null",
          cancel_at_period_end: "boolean | null",
          canceled_at: "string | null",
          created: "string",
          current_period_end: "string",
          current_period_start: "string",
          ended_at: "string | null",
          id: "string",
          metadata: "Json | null",
          price_id: "string | null",
          quantity: "number | null",
          status: "public.Enums.subscription_status | null",
          trial_end: "string | null",
          trial_start: "string | null",
          user_id: "string",
        },
        Insert: {
          cancel_at: "string | null | undefined",
          cancel_at_period_end: "boolean | null | undefined",
          canceled_at: "string | null | undefined",
          created: "string | undefined",
          current_period_end: "string | undefined",
          current_period_start: "string | undefined",
          ended_at: "string | null | undefined",
          id: "string",
          metadata: "Json | null | undefined",
          price_id: "string | null | undefined",
          quantity: "number | null | undefined",
          status: "public.Enums.subscription_status | null | undefined",
          trial_end: "string | null | undefined",
          trial_start: "string | null | undefined",
          user_id: "string",
        },
        Update: {
          cancel_at: "string | null | undefined",
          cancel_at_period_end: "boolean | null | undefined",
          canceled_at: "string | null | undefined",
          created: "string | undefined",
          current_period_end: "string | undefined",
          current_period_start: "string | undefined",
          ended_at: "string | null | undefined",
          id: "string | undefined",
          metadata: "Json | null | undefined",
          price_id: "string | null | undefined",
          quantity: "number | null | undefined",
          status: "public.Enums.subscription_status | null | undefined",
          trial_end: "string | null | undefined",
          trial_start: "string | null | undefined",
          user_id: "string | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "subscriptions_price_id_fkey",
            columns: ["price_id"],
            referencedRelation: "prices",
            referencedColumns: ["id"],
          },
          {
            foreignKeyName: "subscriptions_user_id_fkey",
            columns: ["user_id"],
            referencedRelation: "users",
            referencedColumns: ["id"],
          },
        ],
      },
      users: {
        Row: {
          avatar_url: "string | null",
          billing_address: "Json | null",
          full_name: "string | null",
          id: "string",
          payment_method: "Json | null",
        },
        Insert: {
          avatar_url: "string | null | undefined",
          billing_address: "Json | null | undefined",
          full_name: "string | null | undefined",
          id: "string",
          payment_method: "Json | null | undefined",
        },
        Update: {
          avatar_url: "string | null | undefined",
          billing_address: "Json | null | undefined",
          full_name: "string | null | undefined",
          id: "string | undefined",
          payment_method: "Json | null | undefined",
        },
        Relationships: [
          {
            foreignKeyName: "users_id_fkey",
            columns: ["id"],
            referencedRelation: "users",
            referencedColumns: ["id"],
          },
        ],
      },
    },
    Views: {},
    Functions: {},
    Enums: {
      pricing_plan_interval: ["day", "week", "month", "year"],
      pricing_type: ["one_time", "recurring"],
      subscription_status: ["trialing", "active", "canceled", "incomplete", "incomplete_expired", "past_due", "unpaid"],
    },
    CompositeTypes: {},
  },
};
